{"version":3,"sources":["logo.svg","Bidder.jsx","App.js","reportWebVitals.js","index.js"],"names":["sumReducer","Typography","Text","previousValue","currentValue","initialBidders","generateRandomBidders","MattBidder","props","console","log","useState","bidders","setBidders","draftBid","setDraftBid","bidData","sortedBidArr","Object","keys","map","b","addr","bid","sort","a","bidderNames","ret","i","bids","bidder","push","nextBidder","nextBid","Number","MIN_VALUE","smallBids","length","generateBidData","topRev","winningBid","winnerCount","totalRev","reduce","JSON","stringify","filter","n","className","style","display","flexDirection","width","height","chartType","loader","data","options","isStacked","legend","vAxis","minValue","title","hAxis","rootProps","type","min","onChange","event","parseFloat","target","value","onClick","newBidders","Math","random","bidderCount","round","name","rand","App","src","frameborder","allow","allowfullscreen","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9955d92a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Skeleton, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-google-charts\";\n\n/*\n  ~ What it does? ~\n\n Allows placing bids on a MATT auction\n\n  ~ How can I use? ~\n\n  <MattBidder\n    bids={bidders}\n    fontSize={fontSize}\n  />\n\n*/\n\nconst { Text } = Typography;\n\nconst sumReducer = (previousValue, currentValue) => previousValue + currentValue;\n\nconst initialBidders = generateRandomBidders();\n\nexport default function MattBidder (props) {\n  console.log('rendering mattbidder with props', props);\n\n  const [ bidders, setBidders ] = useState(initialBidders);\n  const [ draftBid, setDraftBid ] = useState(0);\n\n  const bidData = generateBidData(bidders);\n  let topRev = 0;\n  let winningBid = 0;\n  let winnerCount = 0;\n  for (let i = 1; i < bidData.length; i++) {\n    const totalRev = bidData[i].reduce(sumReducer) - bidData[i][0];\n    console.log(`The sum of ${JSON.stringify(bidData[i])} is ${totalRev}`);\n    if (totalRev > topRev) {\n      topRev = totalRev;\n      winningBid = bidData[i][0];\n      winnerCount = bidData[i].filter(n => n >= winningBid).length - 1;\n    };\n  }\n\n  return (\n    <div className=\"mattBidder\" style={{\n      display: 'flex',\n      flexDirection: 'column',\n    }}>\n      <p>In a MATT auction, the seller decides how many editions to mint when closing the auction.</p>\n      <p>Your bid represents the most you are willing to pay to get an edition.</p>\n      <p>You are guaranteed to not pay more than any other winner.</p>\n      <Chart\n          width={'450px'}\n          height={'300px'}\n          chartType=\"AreaChart\"\n          loader={<div>Loading Chart</div>}\n          data={bidData}\n          options={{\n              isStacked: true,\n              height: 300,\n              legend: 'none',\n              vAxis: { minValue: 0, title: 'Total Artist Revenue' },\n              hAxis: { minValue: 0, title: 'Price Per Item' },\n          }}\n          rootProps={{ 'data-testid': '2' }}\n      />\n      <p>The current winning price is ${winningBid}, which will produce {winnerCount} editions and net the artist ${topRev}</p>\n      <div className=\"bidPlacing\">\n        <input type=\"number\" min=\"0\" onChange={(event) => setDraftBid(parseFloat(event.target.value))}/>\n        <input\n          type=\"button\"\n          value=\"Place Bid\"\n          onClick={() => {\n            const newBidders = {...bidders}\n            newBidders[`user${Math.random()}`] = draftBid;\n            setBidders(newBidders);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"button\"\n          value=\"Reset Bids\"\n          onClick={() => {\n            setBidders(initialBidders);            \n          }}\n        />\n        <input\n          type=\"button\"\n          value=\"Randomize Bids\"\n          onClick={() => {\n            setBidders(generateRandomBidders());\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction generateBidData (bidders) {\n\n  const unsortedBidArr = Object.keys(bidders).map((b) => {\n    return { addr:b, bid:bidders[b] }\n  });\n  const sortedBidArr = unsortedBidArr.sort((a, b) => {\n    return a.bid < b.bid;\n  });\n\n  const bidderNames = sortedBidArr.map(b => b.addr);\n\n  const ret = [['Price Per Item', ...bidderNames]];\n\n\n\n  for (let i = 0; i < sortedBidArr.length; i++) {\n    const bidder = sortedBidArr[i];\n\n    // Enter their actual price\n    const bid = bidder.bid;\n    const bids = [bid, ...sortedBidArr.map((bidder) => {\n      if (bidder.bid >= bid) return bid;\n      return 0;\n    })];\n    ret.push(bids);\n\n    \n    const nextBidder = sortedBidArr[i+1];\n    if (nextBidder) {\n      const nextBid = nextBidder.bid + Number.MIN_VALUE;\n      const smallBids = [nextBid, ...sortedBidArr.map((bidder) => {\n        if (bidder.bid >= bid) return nextBid;\n        return 0;\n      })];\n      ret.push(smallBids);\n    }\n\n  };\n\n  console.log(\"Bidder data\", ret);\n  return ret;\n}\n\nfunction generateRandomBidders () {\n  const bidders = {};\n\n  const bidderCount = Math.round(Math.random() * 10) + 1;\n  console.log(`generating ${bidderCount} bidders`);\n\n  // Initialize sample bidders\n  for (var i = 0; i < bidderCount; i++) {\n    const name = Math.random();\n    const rand = Math.round(name * 100);\n    bidders[name] = rand;\n  }\n  bidders['cheapo'] = 0;\n  return bidders;\n}\n","import logo from './logo.svg';\nimport Bidder from './Bidder';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>MATT</h1>\n      <h2>Maximizing Artist Turnout and Takings</h2>\n      <Bidder/>\n      <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0FJ3sYcoLwA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n      <footer>\n        You can learn more about the idea behind this type of auction <a href=\"https://roamresearch.com/#/app/capabul/page/Z72zJ8WKS\">here</a>.\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}